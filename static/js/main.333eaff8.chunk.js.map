{"version":3,"sources":["config.js","actions/queueingModels.js","selectors/queueingModel.js","components/Panels/SelectModel/QueueingModel/QueueingModel.js","components/Panels/SelectModel/QueueingModel/styles.js","components/Panels/Summary/Summary.js","components/Panels/Summary/styles.js","components/Panels/SelectModel/SelectModel.js","components/DataCard/DataField/styles.js","components/DataCard/DataField/NumberField.js","components/DataCard/DataField/TextField.js","components/DataCard/DataField/ObjectField.js","components/DataCard/DataField/index.js","components/DataCard/DataField/DataField.js","utils/constants.js","components/DataCard/DataCard.js","components/DataCard/styles.js","components/Panels/DataEntry/DataEntryForm/Inputs.js","utils/csv.js","localization/common.js","localization/hr.js","localization/index.js","localization/en.js","actions/results.js","components/Panels/DataEntry/DataEntryForm/validators.js","components/Panels/DataEntry/DataEntryForm/DataEntryForm.js","components/Panels/DataEntry/DataEntryForm/styles.js","components/Panels/DataEntry/DataEntry.js","components/Panels/Results/ProbabilityLineChart.js","components/Panels/Results/Results.js","components/Panels/Panels.js","actions/localization.js","components/AppBar/LocalizationMenu.js","components/AppBar/AppBar.js","components/AppBar/styles.js","components/App/App.js","serviceWorker.js","reducers/queueingModels.js","reducers/localization.js","reducers/results.js","reducers/index.js","store/store.js","index.js"],"names":["api","url","endpoints","config","models","metrics","mm1inf","mm1k","mmcinf","mmcc","mg1inf","mek1","exportDataToCsv","FETCHING_MODELS","FETCHING_QUEUEING_MODELS_SUCCESS","FETCHING_QUEUEING_MODELS_ERROR","CHANGE_SELECTED_MODEL","getSelectedModel","state","queueingModels","selectedModel","isSelected","createSelector","props","modelKey","getSelectedModelData","key","mapActionsToProps","changeSelectedModel","modelCode","dispatch","getState","reset","type","connect","selected","withStyles","backgroundColor","classes","name","Grid","item","sm","md","Card","className","CardActionArea","onClick","e","CardContent","Typography","variant","component","align","color","summary","text","ExpansionPanelSummary","expandIcon","aria-controls","root","generateItems","error","fetching","CircularProgress","id","Object","entries","map","generateModels","injectIntl","formatMessage","intl","ExpansionPanel","defaultExpanded","ExpansionPanelDetails","container","spacing","justify","direction","alignItems","resultText","fontSize","InputAdornmentText","notEmptyValue","value","required","undefined","minMaxValue","min","max","values","defaultNumberFieldProps","fullWidth","margin","InputLabelProps","shrink","renderNumberField","label","input","meta","touched","invalid","startAdornment","custom","TextField","helperText","inputProps","step","InputProps","parseNumber","Number","styles","data","isInput","paramName","minimum","maximum","unit","requiredFlag","defaultMessage","InputAdornment","position","generateInputAdornment","Field","validate","parse","readOnly","defaultTextFieldProps","renderTextField","ObjectField","properties","inputs","property","push","NumberField","DataField","hr","en","arrivalRate","serviceRate","systemCapacity","numberOfServers","offeredTraffic","fn","interval","standardDeviation","shapeParameter","averageNumberOfCustomersInSystem","averageNumberOfCustomersInQueue","averageNumberOfCustomersOnServing","averageTimeSpentInSystem","averageTimeWaitingInQueue","averageServingTime","serverUtilization","numberOfCustomers","probabilityNCustomersInSystem","carriedTraffic","trafficVolume","averageArrivalRate","symbols","constants","padding","symbol","display","divider","height","Paper","xs","dangerouslySetInnerHTML","__html","Divider","locale","localization","downloadCsvFile","fileName","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","csvUrl","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","common","FETCHING_RESULTS","FETCHING_RESULTS_SUCCESS","FETCHING_RESULTS_ERROR","successResultsFetch","serviceRateGreaterThanServiceRate","errors","from","to","Math","sqrt","fetchResults","a","ky","post","prefixUrl","json","response","inputsWithValue","message","console","dataEntryForm","width","submitButton","transform","left","marginTop","reduxForm","validator","validators","form","handleSubmit","pristine","submitting","valid","disabledSubmitbutton","onSubmit","Button","size","disabled","dataPoints","n","Qn","aspect","top","right","bottom","strokeDasharray","dataKey","offset","angle","stroke","exportResultsToCsv","results","csvData","filter","charts","find","forEach","result","chart","generateContent","ExpansionPanelActions","Panels","Fragment","SelectModel","DataEntry","CHANGE_LOCALE","changeLocale","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","handleSelect","IconButton","aria-label","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","flexGrow","menuButton","marginRight","title","AppBar","Toolbar","App","this","fetchQueueingModels","messages","Container","Component","queueingModelsFetched","fetched","window","location","hostname","match","initialState","LOCAL_STORAGE_LOCALE_KEY","locales","localeFromLocalStorage","localStorage","getItem","combineReducers","action","setItem","formReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.333eaff8.chunk.js","sourcesContent":["export default {\n  api: {\n    url: 'https://diplomski-api.herokuapp.com/api/v1',\n    endpoints: {\n      config: {\n        models: 'models'\n      },\n      models: {\n        metrics: {\n          mm1inf: 'models/metrics/mm1inf',\n          mm1k: 'models/metrics/mm1k',\n          mmcinf: 'models/metrics/mmcinf',\n          mmcc: 'models/metrics/mmcc',\n          mg1inf: 'models/metrics/mg1inf',\n          mek1: 'models/metrics/mek1'\n        }\n      },\n      exportDataToCsv: 'exportDataToCsv'\n    }\n  }\n};","import config from '../config';\nimport ky from 'ky';\nimport { reset } from 'redux-form';\n\nexport const FETCHING_MODELS = 'FETCHING_MODELS';\nexport const FETCHING_QUEUEING_MODELS_SUCCESS = 'FETCHING_QUEUEING_MODELS_SUCCESS';\nexport const FETCHING_QUEUEING_MODELS_ERROR = 'FETCHING_QUEUEING_MODELS_ERROR';\nexport const CHANGE_SELECTED_MODEL = 'CHANGE_SELECTED_MODEL';\n\nfunction fetchingModels() {\n  return {\n    type: FETCHING_MODELS\n  };\n}\n\nfunction successModelsFetch(data) {\n  return {\n    type: FETCHING_QUEUEING_MODELS_SUCCESS,\n    data\n  };\n}\n\nfunction errorModelsFetch(error) {\n  return {\n    type: FETCHING_QUEUEING_MODELS_ERROR,\n    error\n  };\n}\n\nexport function fetchQueueingModels() {\n  return async (dispatch) => {\n    dispatch(fetchingModels());\n    const { api: { url, endpoints } } = config;\n    const { config: { models } } = endpoints;\n    try {\n      const response = await await ky(\n        models,\n        {\n          prefixUrl: url\n        }\n      ).json();\n      dispatch(successModelsFetch(response));\n    } catch (error) {\n      dispatch(errorModelsFetch(error.message));\n      console.error(error);\n    }\n  };\n}\n\nexport function changeSelectedModel(modelCode) {\n  return (dispatch, getState) => {\n    const { selectedModel } = getState().queueingModels;\n    if (selectedModel !== modelCode) {\n      dispatch(reset(selectedModel));\n      dispatch({\n        type: CHANGE_SELECTED_MODEL,\n        modelCode\n      });\n    }\n  };\n}","import { createSelector } from 'reselect';\n\nconst getSelectedModel = state => state.queueingModels.selectedModel;\nconst getModelKey = (state, props) => props.modelKey;\nconst getModels = (state) => state.queueingModels.models;\n\nexport const isSelected = createSelector(\n  getSelectedModel,\n  getModelKey,\n  (selectedModel, modelKey) => selectedModel === modelKey\n);\n\nexport const getSelectedModelData = createSelector(\n  getSelectedModel,\n  getModels,\n  (selectedModel, models) => (selectedModel && { key: selectedModel, ...models[selectedModel] })\n);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport styles from './styles';\nimport { changeSelectedModel } from '../../../../actions/queueingModels';\nimport { isSelected } from '../../../../selectors/queueingModel';\n\nfunction QueueingModel({selected, classes, name, modelKey, changeSelectedModel}) {\n  const onClick = e => !selected && changeSelectedModel(modelKey);\n  return (\n    <Grid item sm={6} md={4}>\n      <Card className={selected ? classes.selected : ''}>\n        <CardActionArea onClick={onClick}>\n          <CardContent>\n            <Typography variant='h5' component='h2' align='center' color='textPrimary'>\n              {name}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n  );\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    selected: isSelected(state, props)\n  };\n}\n\nconst mapActionsToProps = {\n  changeSelectedModel\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(QueueingModel));","export default {\n  selected: {\n    backgroundColor: 'rgba(255, 153, 0, 1)'\n  }\n};","import React from 'react';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\n\nfunction Summary({ classes, text, ...props }) {\n  return (\n    <ExpansionPanelSummary\n      {...props}\n      expandIcon={<ExpandMoreIcon />}\n      aria-controls='panel2a-content'\n      classes={{root: classes.summary}}\n    >\n      <Typography>{text}</Typography>\n    </ExpansionPanelSummary>\n  );\n}\n\nexport default withStyles(styles)(Summary);","export default {\n  summary: {\n    backgroundColor: '#f5f5f5'\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport QueueingModel from './QueueingModel/QueueingModel';\nimport Summary from '../Summary/Summary';\n\nfunction generateModels(models) {\n  return Object.entries(models).map(([key, { name }]) => <QueueingModel key={key} name={name} modelKey={key} />);\n}\n\nfunction generateItems({ error, fetching, models }) {\n\n  if (fetching) {\n    return <CircularProgress />;\n  }\n\n  if (error) {\n    return (\n      <Typography variant='h5' component='h2' align='center' color='textPrimary'>\n        {<FormattedMessage id='models.fetch.error' />}\n      </Typography>\n    );\n  }\n\n  return generateModels(models);\n}\n\nfunction SelectModelPanel({ queueingModels, intl }) {\n  const { formatMessage } = intl;\n  return (\n    <ExpansionPanel defaultExpanded>\n      <Summary text={formatMessage({ id: 'selectModelPanel.header' })} />\n      <ExpansionPanelDetails>\n        <Grid container spacing={1} justify='center' direction='row' alignItems='center'>\n          {generateItems(queueingModels)}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nfunction mapStateToProps({ queueingModels }) {\n  return {\n    queueingModels\n  };\n}\n\nexport default connect(mapStateToProps, null)(injectIntl(SelectModelPanel));","export default {\n  resultText : {\n    fontSize: '20px'\n  },\n  InputAdornmentText: {\n    fontSize: '15px'\n  }\n};","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Field } from 'redux-form';\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport styles from './styles';\n\nconst notEmptyValue = value => value || value === 0;\nconst required = required => value => !required || notEmptyValue(value) ? undefined : { id: 'param.required' };\nconst minMaxValue = (min = 0.0001, max = 10000) => value => notEmptyValue(value) && (value < min || value > max) ?\n  { id: 'param.betweenValues', values: { min, max } } : undefined;\n\nconst defaultNumberFieldProps = {\n  fullWidth: true,\n  type: 'number',\n  margin: 'normal',\n  variant: 'outlined',\n  InputLabelProps: {\n    shrink: true\n  }\n};\n\nfunction renderNumberField({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  type,\n  min,\n  max,\n  startAdornment,\n  intl,\n  ...custom\n}) {\n  const { formatMessage } = intl;\n  return (\n    <TextField\n      label={label}\n      error={touched && invalid}\n      helperText={touched && error && formatMessage({ id: error.id }, error.values)}\n      inputProps={{ min, max, step: type === 'integer' ? 1 : 0.0001 }}\n      InputProps={{\n        startAdornment,\n      }}\n      {...input}\n      {...custom}\n      {...defaultNumberFieldProps}\n    />\n  );\n}\n\nfunction generateInputAdornment(unit) {\n  return (\n    <InputAdornment position='start'>\n      {unit}\n    </InputAdornment>\n  );\n}\n\nfunction parseNumber(value) {\n  return value && Number(value);\n}\n\nfunction NumberFiled({ data, isInput, classes, intl }) {\n  const { paramName, name, minimum, maximum, value, unit, type, required : requiredFlag } = data;\n  const { formatMessage } = intl;\n  const label = formatMessage({ id: `param.${paramName}.name`, defaultMessage: name });\n  let startAdornment;\n  if (unit) {\n    startAdornment = generateInputAdornment(formatMessage({ id: `param.${paramName}.unit`, defaultMessage: unit }));\n  }\n  return (\n    isInput ?\n      <Field\n        validate={[required(requiredFlag), minMaxValue(minimum, maximum)]}\n        parse={parseNumber}\n        name={paramName}\n        component={renderNumberField}\n        label={label}\n        type={type}\n        min={minimum}\n        max={maximum}\n        startAdornment={startAdornment}\n        intl={intl}\n      /> :\n      <TextField\n        InputProps={{\n          className: classes.resultText,\n          readOnly: true,\n          startAdornment: startAdornment,\n        }}\n        label={label}\n        value={value}\n        {...defaultNumberFieldProps}\n      />\n  );\n}\n\nexport default injectIntl(withStyles(styles)(NumberFiled));","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Field } from 'redux-form';\nimport { withStyles } from '@material-ui/styles';\nimport MuiTextField from '@material-ui/core/TextField';\nimport styles from './styles';\nimport { FormattedMessage } from 'react-intl';\n\nconst required = required => value => !required || value ? undefined : <FormattedMessage id='param.required' />;\n\nconst defaultTextFieldProps = {\n  fullWidth: true,\n  type: 'text',\n  margin: 'normal',\n  variant: 'outlined',\n  InputLabelProps: {\n    shrink:true\n  }\n};\n\nfunction renderTextField({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) {\n  return (\n    <MuiTextField\n      label={label}\n      error={touched && invalid}\n      helperText={touched && error}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...input}\n      {...custom}\n      {...defaultTextFieldProps}\n    />\n  );\n}\n\nfunction TextField({ data, isInput, classes, intl }) {\n  const { paramName, name, value, required: requiredFlag } = data;\n  const { formatMessage } = intl;\n  return (\n    isInput ?\n      <Field\n        validate={[required(requiredFlag)]}\n        name={paramName}\n        component={renderTextField}\n        label={formatMessage({ id: `param.${paramName}.name`, defaultMessage: name })}\n      /> :\n      <MuiTextField\n        InputProps={{\n          className: classes.resultText,\n          readOnly: true,\n        }}\n        value={value}\n        {...defaultTextFieldProps}\n      />\n  );\n}\n\nexport default injectIntl(withStyles(styles)(TextField));","import React from 'react';\nimport TextField from './TextField';\nimport NumberField from './NumberField';\n\nexport default function ObjectField({ data, isInput }) {\n  const { paramName, name, properties } = data;\n  const inputs = [];\n  for (let [key, property] of Object.entries(properties)) {\n    const data = {\n      paramName: `${paramName}.${key}`,\n      name: key === 'value' ? name : key,\n      ...property\n    };\n    if (property.type === 'string') {\n      inputs.push(<TextField key={key} data={data} isInput={isInput} />);\n    } else {\n      inputs.push(<NumberField key={key} data={data} isInput={isInput} />);\n    }\n\n  }\n  return inputs;\n}","import DataField from './DataField';\nexport default DataField;","import React from 'react';\nimport NumberField from './NumberField';\nimport TextField from './TextField';\nimport ObjectField from './ObjectField';\n\nexport default function InputField({ data, isInput }) {\n  const { type } = data;\n  switch (type) {\n    case 'number':\n    case 'integer':\n      return <NumberField data={data} isInput={isInput} />;\n    case 'string':\n      return <TextField data={data} isInput={isInput} />;\n    case 'object':\n      return <ObjectField data={data} isInput={isInput} />;\n    default:\n      return null;\n  }\n}\n","export default {\n  locales: {\n    hr: 'hr',\n    en: 'en'\n  },\n  symbols: {\n    arrivalRate: '\\u03BB',\n    serviceRate: '\\u03BC',\n    systemCapacity: 'K',\n    numberOfServers: 'C',\n    offeredTraffic: 'a',\n    fn: 'f<sub>s</sub>(t)',\n    interval: '[ ]',\n    standardDeviation: '\\u03C3<sub>\\uD835\\uDF0F</sub><sub><small><i>s</i></small></sub>',\n    shapeParameter: 'k',\n    averageNumberOfCustomersInSystem: 'Lq',\n    averageNumberOfCustomersInQueue: 'Lw',\n    averageNumberOfCustomersOnServing: 'Ls',\n    averageTimeSpentInSystem: 'Tq',\n    averageTimeWaitingInQueue: 'Tw',\n    averageServingTime: 'Ts',\n    serverUtilization: '\\u03C1\\'',\n    numberOfCustomers: 'n',\n    probabilityNCustomersInSystem: 'Q',\n    carriedTraffic: 'a\\'',\n    trafficVolume: '\\u03C1',\n    averageArrivalRate: '\\u03BB\\''\n  }\n};","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\nimport Paper from '@material-ui/core/Paper';\nimport DataField from './DataField';\nimport constants from '../../utils/constants';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage } from 'react-intl';\n\nconst { symbols } = constants;\n\nfunction DataCard({ data, isInput, classes, numberOfCustomers }) {\n  const { paramName } = data;\n  let symbol = symbols[data.paramName];\n  if (data.paramName === 'probabilityNCustomersInSystem') {\n    symbol += `<sub>${numberOfCustomers.value}</sub>`;\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div>\n        <Grid container spacing={1} direction='row' alignItems='center'>\n          <Grid item xs={2}>\n            <Typography variant='h4' align='center'>\n              <div dangerouslySetInnerHTML={{ __html: symbol }} className={classes.symbol} />\n            </Typography>\n          </Grid>\n          <Grid item xs={4} md={2}>\n            <Typography variant='h4' align='center'>\n              <span>=</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md={8}>\n            <DataField data={data} isInput={isInput} />\n          </Grid>\n        </Grid>\n      </div>\n      <Divider className={classes.divider} />\n      <div>\n        <Typography variant='body1'>\n          {\n            paramName === 'numberOfCustomers' || paramName === 'interval'\n              ?\n              <FormattedMessage id={`param.${paramName}.description`} />\n              : ''\n          }\n        </Typography>\n      </div>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(DataCard);","export default {\n  root: {\n    padding: '20px 30px'\n  },\n  symbol: {\n    display: 'inline-block'\n  },\n  divider: {\n    height: '2px'\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport DataCard from '../../../DataCard/DataCard';\n\nfunction Inputs({ inputs, locale }) {\n  return inputs.map(input => (\n    <Grid item xs={6} md={4} key={input.paramName + locale}>\n      <DataCard data={input} isInput={true} />\n    </Grid>\n  ));\n}\n\nfunction mapStateToProps({ localization }) {\n  return {\n    locale: localization.locale\n  };\n}\n\nexport default connect(mapStateToProps, null)(Inputs);","export function downloadCsvFile(data, fileName) {\n  var blob = new Blob([data], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) {\n    navigator.msSaveBlob(blob, `${fileName}.csv`);\n  } else {\n    var link = document.createElement('a');\n    if (link.download !== undefined) {\n      var csvUrl = URL.createObjectURL(blob);\n      link.setAttribute('href', csvUrl);\n      link.setAttribute('download', `${fileName}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}","export default {\n  'param.offeredTraffic.unit': 'Erl',\n  'param.averageTimeSpentInSystem.unit': 'min',\n  'param.averageTimeWaitingInQueue.unit': 'min',\n  'param.averageServingTime.unit': 'min',\n  'param.empty.error': '',\n  'param.carriedTraffic.unit': 'Erl',\n  'param.trafficVolume.unit': ''\n};","import common from './common';\nexport default {\n  ...common,\n  'app.title': 'Diplomski rad',\n  'selectModelPanel.header': 'Odaberite model: ',\n  'changeLanguage.hr': 'Hrvatski',\n  'changeLanguage.en': 'English',\n  'models.fetch.error': 'Greška! Molim Vas pokušajte osvježit prozor!',\n  'dataEntryPanel.header': 'Unos podataka: ',\n  'param.arrivalRate.name': 'Intenzitet Dolazaka',\n  'param.arrivalRate.unit': 'kor/min',\n  'param.serviceRate.name': 'Intenzitet Posluživanja',\n  'param.serviceRate.unit': 'kor/min',\n  'param.systemCapacity.name': 'Kapacitet Sustava',\n  'param.numberOfServers.name': 'Broj Poslužitelja',\n  'param.offeredTraffic.name': 'Ponuđeni Promet',\n  'param.fn.name': 'Funkcija Gustoće Vjerojatnosti',\n  'param.interval.from.name': 'Od',\n  'param.interval.to.name': 'Do',\n  'param.standardDeviation.name': 'Standardna Devijacija',\n  'param.shapeParameter.name': 'Red Erlangove Razdiobe',\n  'button.calculate': 'Izračunati',\n  'resultsPanel.header': 'Rezultati: ',\n  'results.fetch.error': 'Neočekivana pogreška.',\n  'param.averageNumberOfCustomersInSystem.name': 'Prosječan Broj Korisnika U Sustavu',\n  'param.averageNumberOfCustomersInQueue.name': 'Prosječan Broj Korisnika U Redu',\n  'param.averageNumberOfCustomersOnServing.name': 'Prosječan Broj Korisnika Na Posluživanju',\n  'param.averageTimeSpentInSystem.name': 'Prosječno Vrijeme Boravka U Sustavu',\n  'param.averageTimeWaitingInQueue.name': 'Prosječno Vrijeme Boravka U Redu',\n  'param.averageServingTime.name': 'Prosječno Vrijeme Posluživanja',\n  'param.serverUtilization.name': 'Iskoristivost poslužitelja',\n  'param.required': 'Obavezno polje',\n  'param.betweenValues': 'Broj mora biti između {min} i {max}',\n  'param.serviceRateMustBeGreaterThanArrivalRate': 'Vrijednost mora biti veća od vrijednosti Intenziteta dolazaka',\n  'param.serviceRateAndArrivalRateMustBeNotEqual': 'Vrijednost ne smije biti jednaka s vrijednošću Intenziteta dolazaka',\n  'param.toMustBeGreaterThanFrom': 'Vrijednost mora biti veći od vrijednosti parametra Od',\n  'param.mek1OfferedTrafficAmbigous': 'Vrijednost treba biti manje. S ovom kombinacijom ulaza dobiti će se krivi rezultat!',\n  'results.button.exportCsv': 'Izvoz rezultata u CSV',\n  'probabilityLineChart.yAxis.name': 'Vjerojatnost Qn',\n  'probabilityLineChart.xAxis.name': 'Broj Korisnika (n)',\n  'param.numberOfCustomers.name': 'Broj korisnika',\n  'param.probabilityNCustomersInSystem.name': 'Vjerojatnost da se u sustavu nalazi n korisnika',\n  'param.numberOfCustomers.description': 'Ako parametar \"n\" nije unešen, neće se računati vjerojatnost da se n korisnika nalazi u sustavu',\n  'param.interval.description': 'Vremenski interval',\n  'param.carriedTraffic.name': 'Obavljeni promet',\n  'param.trafficVolume.name': 'Jakost prometa',\n  'param.averageArrivalRate.name': 'Brzina ulazaka korisnika',\n  'param.averageArrivalRate.unit': 'kor/min'\n};","import en from './en';\nimport hr from './hr';\n\nexport default {\n  en,\n  hr\n};","import common from './common';\nexport default {\n  ...common,\n  'app.title': 'Final thesis',\n  'selectModelPanel.header': 'Select model: ',\n  'changeLanguage.hr': 'Hrvatski',\n  'changeLanguage.en': 'English',\n  'models.fetch.error': 'Error! Please refresh the page and try again!',\n  'dataEntryPanel.header': 'Data entry: ',\n  'param.arrivalRate.name': 'Arrival Rate',\n  'param.arrivalRate.unit': 'Cust/min',\n  'param.serviceRate.name': 'Service Rate',\n  'param.serviceRate.unit': 'Cust/min',\n  'param.systemCapacity.name': 'System Capacity',\n  'param.numberOfServers.name': 'Number Of Servers',\n  'param.offeredTraffic.name': 'Offered Traffic',\n  'param.fn.name': 'Density Function Of Serving Time Probability',\n  'param.interval.from.name': 'From',\n  'param.interval.to.name': 'To',\n  'param.standardDeviation.name': 'Standard Deviation',\n  'param.shapeParameter.name': 'Shape Parameter',\n  'button.calculate': 'Calculate',\n  'resultsPanel.header': 'Results: ',\n  'results.fetch.error': 'Unexpected error.',\n  'param.averageNumberOfCustomersInSystem.name': 'Average Number Of Customers In System',\n  'param.averageNumberOfCustomersInQueue.name': 'Average Number Of Customers In Queue',\n  'param.averageNumberOfCustomersOnServing.name': 'Average Number Of Customers On Serving',\n  'param.averageTimeSpentInSystem.name': 'Average Time Spent In System',\n  'param.averageTimeWaitingInQueue.name': 'verage Time Waiting In Queue',\n  'param.averageServingTime.name': 'Average Serving Time',\n  'param.serverUtilization.name': 'Server Utilization',\n  'param.required': 'Required',\n  'param.betweenValues': 'Number must be between {min} and {max}',\n  'param.serviceRateMustBeGreaterThanArrivalRate': 'Value must be greater than value of Arrival Rate',\n  'param.serviceRateAndArrivalRateMustBeNotEqual': 'Value must be not equalt wiht value of Arrival Rate',\n  'param.toMustBeGreaterThanFrom': 'Value must be greater than value of parameter From',\n  'param.mek1OfferedTrafficAmbigous': 'Value should be lower. With this combination of values result would be wrong!',\n  'results.button.exportCsv': 'Export Results to CSV',\n  'probabilityLineChart.yAxis.name': 'Probability Qn',\n  'probabilityLineChart.xAxis.name': 'Number of users (n)',\n  'param.numberOfCustomers.name': 'Number Of Customers',\n  'param.probabilityNCustomersInSystem.name': 'Probability that there is n customers in the system',\n  'param.numberOfCustomers.description': 'If parameter \"n\" is not set, Probability that there is n customers in the system will not be calculated',\n  'param.interval.description': 'Time interval',\n  'param.carriedTraffic.name': 'Carried Traffic',\n  'param.trafficVolume.name': 'Traffic Volume',\n  'param.averageArrivalRate.name': 'Average Arrival Rate',\n  'param.averageArrivalRate.unit': 'Cust/min'\n};","import ky from 'ky';\nimport config from '../config';\nimport { downloadCsvFile } from '../utils/csv';\nimport localization from '../localization';\n\nexport const FETCHING_RESULTS = 'FETCHING_RESULTS';\nexport const FETCHING_RESULTS_SUCCESS = 'FETCHING_RESULTS_SUCCESS';\nexport const FETCHING_RESULTS_ERROR = 'FETCHING_RESULTS_ERROR';\n\nfunction fetchingResults() {\n  return {\n    type: FETCHING_RESULTS\n  };\n}\n\nfunction successResultsFetch(data, inputs) {\n  return {\n    type: FETCHING_RESULTS_SUCCESS,\n    data,\n    inputs\n  };\n}\n\nfunction errorResultsFetch(error) {\n  return {\n    type: FETCHING_RESULTS_ERROR,\n    error\n  };\n}\n\nexport function fetchResults(data) {\n  return async (dispatch, getState) => {\n    dispatch(fetchingResults());\n    const { selectedModel } = getState().queueingModels;\n    const { api: { url, endpoints } } = config;\n    const { models: { metrics } } = endpoints;\n    try {\n      const response = await await ky.post(\n        metrics[selectedModel],\n        {\n          prefixUrl: url,\n          json: data\n        }\n      ).json();\n      const { inputs } = getState().queueingModels.models[selectedModel];\n      const inputsWithValue = inputs.map(input => ({ ...input, value: data[input.paramName] }));\n      dispatch(successResultsFetch(response, inputsWithValue));\n    } catch (error) {\n      dispatch(errorResultsFetch(error.message));\n      console.error(error);\n    }\n  };\n}\n\nexport function exportResultsToCsv() {\n  return async (dispatch, getState) => {\n    const { queueingModels: { selectedModel }, results: { inputs, data }, localization: { locale } } = getState();\n    const { api: { url, endpoints } } = config;\n    const { exportDataToCsv } = endpoints;\n    const csvData = {\n      fileName: selectedModel,\n      data: [...inputs, ...data.filter(({ paramName }) => paramName !== 'chartData')].map(({ paramName, value }) => (\n        { name: localization[locale][`param.${paramName}.name`], value, unit: localization[locale][`param.${paramName}.unit`] })\n      )\n    };\n    try {\n      const response = await ky.post(\n        exportDataToCsv,\n        {\n          prefixUrl: url,\n          json: csvData\n        }\n      ).text();\n      downloadCsvFile(response, selectedModel);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}","function serviceRateGreaterThanServiceRate({ arrivalRate, serviceRate }) {\n  const errors = {};\n  if (arrivalRate && serviceRate && arrivalRate >= serviceRate) {\n    errors.serviceRate = {\n      id: 'param.serviceRateMustBeGreaterThanArrivalRate'\n    };\n  }\n  return errors;\n}\n\nexport default {\n  mm1inf: serviceRateGreaterThanServiceRate,\n  mmcinf: serviceRateGreaterThanServiceRate,\n  mm1k: ({ arrivalRate, serviceRate }) => {\n    const errors = {};\n    if (arrivalRate && serviceRate && arrivalRate === serviceRate) {\n      errors.serviceRate = {\n        id: 'param.serviceRateAndArrivalRateMustBeNotEqual'\n      };\n    }\n    return errors;\n  },\n  mg1inf: ({ interval = {} }) => {\n    const errors = {};\n    const { from, to } = interval;\n    if (from && to && from >= to) {\n      errors.interval = {\n        to: {\n          id: 'param.toMustBeGreaterThanFrom'\n        }\n      };\n    }\n    return errors;\n  },\n  mek1: ({ arrivalRate, standardDeviation, shapeParameter }) => {\n    const errors = {};\n    if (standardDeviation * Math.sqrt(shapeParameter) * arrivalRate > 1) {\n      errors.arrivalRate = {\n        id: 'param.mek1OfferedTrafficAmbigous'\n      };\n      errors.standardDeviation = {\n        id: 'param.mek1OfferedTrafficAmbigous'\n      };\n      errors.shapeParameter = {\n        id: 'param.mek1OfferedTrafficAmbigous'\n      };\n    }\n    return errors;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { reduxForm } from 'redux-form';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Inputs from './Inputs';\nimport { fetchResults } from '../../../../actions/results';\nimport validators from './validators';\n\nconst validate = (values, props) => {\n  const validator = validators[props.form];\n  if (!validator) {\n    return;\n  }\n  return validator(values, props);\n};\n\nconst DataEntryForm = ({ handleSubmit, classes, inputs, fetchResults, pristine, submitting, valid }) => {\n  const disabledSubmitbutton = pristine || submitting || !valid;\n  return (\n    <form className={classes.dataEntryForm} onSubmit={handleSubmit(values => fetchResults(values))}>\n      <Grid container spacing={1} direction='row'>\n        <Inputs inputs={inputs} />\n      </Grid>\n      <Button type='submit' size='large' variant='contained' color='primary' disabled={disabledSubmitbutton} className={classes.submitButton}>\n        <FormattedMessage id='button.calculate' />\n      </Button>\n    </form>\n  );\n};\n\nconst mapActionsToProps = {\n  fetchResults\n};\n\nexport default connect(null, mapActionsToProps)(withStyles(styles)(reduxForm({\n  validate\n})(DataEntryForm)));","export default {\n  dataEntryForm: {\n    width: '100%'\n  },\n  submitButton: {\n    transform: 'translate(-50%)',\n    left: '50%',\n    marginTop: '20px',\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { getSelectedModelData } from '../../../selectors/queueingModel';\nimport DataEntryForm from './DataEntryForm/DataEntryForm';\nimport Summary from '../Summary/Summary';\n\nfunction DataEntryPanel({ selectedModel, intl }) {\n  const { formatMessage } = intl;\n\n  if (!selectedModel) {\n    return null;\n  }\n\n  const { inputs, key } = selectedModel;\n  return (\n    <ExpansionPanel defaultExpanded>\n      <Summary text={formatMessage({ id: 'dataEntryPanel.header' })} />\n      <ExpansionPanelDetails>\n        <DataEntryForm form={key} inputs={inputs} />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedModel: getSelectedModelData(state),\n  };\n}\n\nexport default connect(mapStateToProps, null)(injectIntl(DataEntryPanel));","import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  YAxis,\r\n  XAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Label\r\n} from 'recharts';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction ProbabilityLineChart({ dataPoints, intl }) {\r\n  const { formatMessage } = intl;\r\n  const data = dataPoints.map(([n, Qn]) => ({ n, Qn }));\r\n  return (\r\n    <Paper>\r\n      <Typography variant='h5' component='h2' align='center' color='textPrimary'>\r\n        {formatMessage({ id: 'param.probabilityNCustomersInSystem.name' })}\r\n      </Typography>\r\n      <ResponsiveContainer width='100%' aspect={4.0 / 3.0}>\r\n        <LineChart\r\n          data={data}\r\n          margin={{ top: 20, right: 20, left: 20, bottom: 20 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis padding={{ right: 30 }} dataKey='n'>\r\n            <Label\r\n              value={formatMessage({ id: 'probabilityLineChart.xAxis.name' })}\r\n              position='insideBottomRight'\r\n              offset={-5}\r\n            />\r\n          </XAxis>\r\n          <YAxis>\r\n            <Label\r\n              value={formatMessage({ id: 'probabilityLineChart.yAxis.name' })}\r\n              position='insideLeft'\r\n              angle={-90}\r\n            />\r\n          </YAxis>\r\n          <Tooltip />\r\n          <Line type='monotone' dataKey='Qn' stroke='#8884d8' />\r\n        </LineChart>\r\n      </ResponsiveContainer >\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default injectIntl(ProbabilityLineChart);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Summary from '../Summary/Summary';\nimport DataCard from '../../DataCard/DataCard';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Divider from '@material-ui/core/Divider';\nimport { exportResultsToCsv } from '../../../actions/results';\nimport ProbabilityLineChart from './ProbabilityLineChart';\n\nfunction generateContent({ error, fetching, data }, locale, inputs) {\n\n  if (fetching) {\n    return <CircularProgress />;\n  }\n\n  if (error) {\n    return (\n      <Typography variant='h5' component='h2' align='center' color='textPrimary'>\n        {<FormattedMessage id='results.fetch.error' defaultMessage='Unexpected error!' />}\n      </Typography>\n    );\n  }\n\n  const results = [];\n  const charts = [];\n  const numberOfCustomers = inputs.find((input) => input.paramName === 'numberOfCustomers');\n\n  data.forEach(result => {\n    if (result.paramName !== 'chartData') {\n      results.push(\n        <Grid item xs={6} md={4} key={result.paramName + locale} >\n          <DataCard data={result} numberOfCustomers={numberOfCustomers} isInput={false} />\n        </Grid>\n      );\n    } else {\n      result.value.forEach((chart) => {\n        charts.push(\n          <Grid item xs={12} md={6} key={chart.id} >\n            <ProbabilityLineChart {...chart} />\n          </Grid>\n        );\n      });\n    }\n  });\n\n  return [...results, ...charts];\n}\n\nfunction ResultsPanel({ results, locale, intl, exportResultsToCsv }) {\n  const { formatMessage } = intl;\n  const { data, fetching, error, inputs } = results;\n\n  if (!data && !fetching) {\n    return null;\n  }\n\n  return (\n    <ExpansionPanel defaultExpanded>\n      <Summary text={formatMessage({ id: 'resultsPanel.header' })} />\n      <ExpansionPanelDetails>\n        <Grid container spacing={1} justify={error || fetching ? 'center' : undefined} direction='row'>\n          {generateContent(results, locale, inputs)}\n        </Grid>\n      </ExpansionPanelDetails>\n      <Divider />\n      <ExpansionPanelActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={exportResultsToCsv}>\n          {formatMessage({ id: 'results.button.exportCsv' })}\n        </Button>\n      </ExpansionPanelActions>\n    </ExpansionPanel>\n  );\n}\n\nfunction mapStateToProps({ results, localization }) {\n  return {\n    results,\n    locale: localization.locale\n  };\n}\n\nconst mapActionsToProps = {\n  exportResultsToCsv\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(ResultsPanel));","import React from 'react';\nimport SelectModelPanel from './SelectModel/SelectModel';\nimport DataEntryPanel from './DataEntry/DataEntry';\nimport ResultPanel from './Results/Results';\n\nexport default function Panels() {\n  return (\n    <React.Fragment>\n      <SelectModelPanel />\n      <DataEntryPanel />\n      <ResultPanel/>\n    </React.Fragment >\n  );\n}\n","export const CHANGE_LOCALE = 'CHANGE_LOCALE';\n\nexport function changeLocale(locale) {\n  return {\n    type: CHANGE_LOCALE,\n    locale\n  };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Language from '@material-ui/icons/Language';\nimport { FormattedMessage } from 'react-intl';\nimport { changeLocale } from '../../actions/localization';\nimport constants from '../../utils/constants';\n\nconst { locales: { en, hr } } = constants;\n\nfunction LocalizationMenu({ changeLocale, locale }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  function handleMenu(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleSelect(locale) {\n    changeLocale(locale);\n    handleClose();\n  }\n\n  return (\n    <div>\n      <IconButton\n        aria-label='Change language'\n        aria-haspopup='true'\n        onClick={handleMenu}\n        color='inherit'\n      >\n        <Language />\n      </IconButton>\n      <Menu\n        id='menu-appbar'\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem\n          key={hr}\n          selected={locale === hr}\n          onClick={e => handleSelect(hr)}\n        >\n          <FormattedMessage id='changeLanguage.hr' />\n        </MenuItem>\n        <MenuItem\n          key={en}\n          selected={locale === en}\n          onClick={e => handleSelect(en)}\n        >\n          <FormattedMessage id='changeLanguage.en' />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nfunction mapStateToProps({ localization: { locale } }) {\n  return {\n    locale\n  };\n}\n\nconst mapActionsToProps = {\n  changeLocale\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LocalizationMenu);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { FormattedMessage } from 'react-intl';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\nimport LocalizationMenu from './LocalizationMenu';\n\nfunction CustomAppBar({ classes }) {\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant='h6' className={classes.title}>\n            <FormattedMessage id='app.title' />\n          </Typography>\n          <LocalizationMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(CustomAppBar);","export default {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: '2px',\n  },\n  title: {\n    flexGrow: 1,\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport Container from '@material-ui/core/Container';\nimport Panels from '../Panels/Panels';\nimport AppBar from '../AppBar/AppBar';\nimport localization from '../../localization';\nimport { fetchQueueingModels } from '../../actions/queueingModels';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchQueueingModels();\n  }\n\n  render() {\n    const { locale } = this.props;\n    return (\n      <IntlProvider\n        locale={locale}\n        messages={localization[locale]}\n      >\n        <Container>\n          <AppBar />\n          <Panels />\n        </Container>\n      </IntlProvider>\n    );\n  }\n}\n\nfunction mapStateToProps({ localization, queueingModels }) {\n  return {\n    locale: localization.locale,\n    queueingModelsFetched: queueingModels.fetched\n  };\n}\n\nconst mapActionsToProps = {\n  fetchQueueingModels\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCHING_MODELS, FETCHING_QUEUEING_MODELS_SUCCESS, FETCHING_QUEUEING_MODELS_ERROR, CHANGE_SELECTED_MODEL } from '../actions/queueingModels';\n\nconst initialState = {\n  models: {},\n  selectedModel: undefined,\n  fetching: false,\n  error: undefined\n};\n\nexport default function queueingModels(state = initialState, action) {\n  switch (action.type) {\n    case FETCHING_MODELS:\n      return { ...state, fetching: true, error: undefined };\n    case FETCHING_QUEUEING_MODELS_SUCCESS:\n      return { ...state, models: action.data, fetching: false, error: undefined };\n    case FETCHING_QUEUEING_MODELS_ERROR:\n      return { ...state, error: action.error, fetching: false };\n    case CHANGE_SELECTED_MODEL:\n      return { ...state, selectedModel: action.modelCode };\n    default:\n      return state;\n  }\n}","import { CHANGE_LOCALE } from '../actions/localization';\nimport constants from '../utils/constants';\nconst LOCAL_STORAGE_LOCALE_KEY = 'locale';\n\nconst { locales } = constants;\nconst localeFromLocalStorage = localStorage.getItem(LOCAL_STORAGE_LOCALE_KEY);\nlet locale;\n\nif (localeFromLocalStorage && locales[localeFromLocalStorage]) {\n  locale = localeFromLocalStorage;\n} else {\n  locale = locales.hr;\n}\n\nconst initialState = {\n  locale\n};\n\nexport default function localization(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      if (action.locale === state.locale) {\n        return state;\n      }\n      localStorage.setItem(LOCAL_STORAGE_LOCALE_KEY, locale);\n      return { ...state, locale: action.locale };\n    default:\n      return state;\n  }\n}","import { FETCHING_RESULTS, FETCHING_RESULTS_SUCCESS, FETCHING_RESULTS_ERROR } from '../actions/results';\n\nconst initialState = {\n  data: undefined,\n  inputs: undefined,\n  fetching: false,\n  error: undefined\n};\n\nexport default function queueingModels(state = initialState, action) {\n  switch (action.type) {\n    case FETCHING_RESULTS:\n      return { ...state, fetching: true, error: undefined };\n    case FETCHING_RESULTS_SUCCESS:\n      return { ...state, data: action.data, inputs: action.inputs, fetching: false, error: undefined };\n    case FETCHING_RESULTS_ERROR:\n      return { ...state, error: action.error, fetching: false, data: [], inputs: [] };\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport queueingModels from './queueingModels';\nimport localization from './localization';\nimport results from './results';\n\nexport default combineReducers({\n  queueingModels,\n  localization,\n  form: formReducer,\n  results\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}